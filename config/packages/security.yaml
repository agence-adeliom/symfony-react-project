security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ADMINISTRATOR, ROLE_ALLOWED_TO_SWITCH, ROLE_EDITOR, ROLE_USER]
        ROLE_ADMINISTRATOR: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, ROLE_EDITOR, ROLE_USER]
        ROLE_EDITOR:       [ROLE_ADMIN, ROLE_EDITOR, ROLE_USER]

    providers:
        easy_admin_user_provider:
            id: easy_admin_user.user_provider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            lazy: true
            pattern: ^/admin
            provider: easy_admin_user_provider
            custom_authenticator: easy_admin_user.authenticator
            switch_user: { role: ROLE_ALLOWED_TO_SWITCH }
            remember_me:
                secret: "%env(APP_SECRET)%"
                name: ADMIN_REMEMBER_ME
                lifetime: 31536000
                path: /admin
                remember_me_parameter: _admin_remember_me
            logout:
                path: easy_admin_logout
                target: easy_admin_login

        main:
            lazy: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login$, roles: PUBLIC_ACCESS }
        - { path: ^/admin/logout, roles: PUBLIC_ACCESS }
        - { path: ^/admin/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, role: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
